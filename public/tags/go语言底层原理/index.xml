<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>go语言底层原理 - Tag - 阿冰的小屋</title>
    <link>https://blog.coldbin.top/tags/go%E8%AF%AD%E8%A8%80%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</link>
    <description>go语言底层原理 - Tag - 阿冰的小屋</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>cold-bin@qq.com (阿冰)</managingEditor>
      <webMaster>cold-bin@qq.com (阿冰)</webMaster><copyright>本博客内容仅供教育和信息分享，不对准确性和完整性做保证，使用需谨慎。未经允许，禁止复制或商业使用。外部链接概不负责。随时可能更新，使用本博客默认遵循免责声明</copyright><lastBuildDate>Mon, 30 Oct 2023 15:10:39 &#43;0800</lastBuildDate><atom:link href="https://blog.coldbin.top/tags/go%E8%AF%AD%E8%A8%80%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/" rel="self" type="application/rss+xml" /><item>
  <title>Go语言设计与实现之栈内存管理</title>
  <link>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E6%A0%88%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
  <pubDate>Mon, 30 Oct 2023 15:10:39 &#43;0800</pubDate>
  <author>阿冰</author>
  <guid>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E6%A0%88%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid>
  <description><![CDATA[go的栈内存 栈内存与堆内存不一样，一般GC扫描的对象属于堆区，局部变量、函数参数等都分配到栈内存，而全局变量等会分配到堆区。 那么栈内存并不由]]></description>
</item>
<item>
  <title>Go语言设计与实现之垃圾回收</title>
  <link>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
  <pubDate>Sun, 29 Oct 2023 15:09:52 &#43;0800</pubDate>
  <author>阿冰</author>
  <guid>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
  <description><![CDATA[go的GC GC主要作用于堆区。 相比于C、C++等语言手动管理内存机制，go具备GC机制。GC的意思是垃圾回收，用以回收不再使用的内存空间。G]]></description>
</item>
<item>
  <title>Go语言设计与实现之内存分配器</title>
  <link>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/</link>
  <pubDate>Sun, 29 Oct 2023 15:09:36 &#43;0800</pubDate>
  <author>阿冰</author>
  <guid>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/</guid>
  <description><![CDATA[go内存分配器 程序中的数据和变量都会被分配到程序所在的虚拟内存中，内存空间包含两个重要区域：栈区（Stack）和堆区（Heap）。函数调用的]]></description>
</item>
<item>
  <title>Go语言设计与实现之调度器</title>
  <link>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E8%B0%83%E5%BA%A6%E5%99%A8/</link>
  <pubDate>Sun, 29 Oct 2023 15:09:26 &#43;0800</pubDate>
  <author>阿冰</author>
  <guid>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E8%B0%83%E5%BA%A6%E5%99%A8/</guid>
  <description><![CDATA[go线程调度器 抢占式调度器 go语言调度器的发展历程经过好几个版本，目前的实现是基于信号的抢占式调度器。go语言是在用户空间实现的协程调度器，]]></description>
</item>
<item>
  <title>Go语言设计与实现之基础数据结构</title>
  <link>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
  <pubDate>Fri, 27 Oct 2023 22:55:23 &#43;0800</pubDate>
  <author>阿冰</author>
  <guid>https://blog.coldbin.top/go%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
  <description><![CDATA[<p>这里介绍一些关于go语言底层数据结构的原理与实现，如\slice\array\channel\map\string</p>]]></description>
</item>
</channel>
</rss>
